openapi: 3.0.1
info:
  title: Firebase Authentication API
  description: API Documentation for Firebase Authentication and User Management
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /:
    get:
      summary: Hello World
      operationId: helloWorld
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string

  /signUpFirebase:
    post:
      summary: Sign Up a new user
      operationId: signUpFirebase
      requestBody:
        description: User Registration Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'

  /signInFirebase:
    get:
      summary: Sign In an existing user
      operationId: signInFirebase
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'

  /userProfile:
    get:
      summary: Get user profile
      operationId: getUserProfile
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'

  /updateUser:
    post:
      summary: Update user information
      operationId: updateUser
      requestBody:
        description: User Update Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '200':
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationResponse'

components:
  schemas:
    UserRegistrationRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    UserRegistrationResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
      required:
        - success
        - message

    UserProfileResponse:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        # Add other profile fields as needed
      required:
        - email
        - username
